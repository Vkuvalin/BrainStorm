package com.kuvalin.brainstorm.presentation.viewmodels.main

import androidx.compose.ui.graphics.Color
import androidx.lifecycle.ViewModel
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import javax.inject.Inject


class BrainStormMainViewModel @Inject constructor() : ViewModel() {


    /* ############# üßÆ ###################### –ü–ï–†–ï–ú–ï–ù–ù–´–ï #################### üßÆ ############## */

    // –°–æ—Å—Ç–æ—è–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ (–∫–Ω–æ–ø–æ–∫ –≤–µ—Ä—Ö–Ω–µ–≥–æ TopAppBar)
    private val _clickOnShareState = MutableStateFlow(false)
    val clickOnShareState: StateFlow<Boolean> = _clickOnShareState

    private val _clickOnAddFriendsButton = MutableStateFlow(false)
    val clickOnAddFriendsButton: StateFlow<Boolean> = _clickOnAddFriendsButton

    private val _clickOnAddQuestionButton = MutableStateFlow(false)
    val clickOnAddQuestionButton: StateFlow<Boolean> = _clickOnAddQuestionButton

    private val _clickOnGameSettingsButton = MutableStateFlow(false)
    val clickOnGameSettingsButton: StateFlow<Boolean> = _clickOnGameSettingsButton


    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∫–æ–Ω–æ–∫ (–≤ dp)
    val sizeIcon = 35
    val paddingBottomIcon = 3
    val paddingTopIcon = 3
    val strokeWidthIcon = 3
    val correctionValueHeightBorder = 1

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π
    val separatorHeight = (sizeIcon * 0.8).toInt()
    val separatorColor = Color.Gray
    val separatorWidth = 1

    /* ########################################################################################## */



    /* ############# üü¢ ################## –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ################## üü¢ ############### */

    // ###################### –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
    fun toggleShareState(value: Boolean) { _clickOnShareState.value = value }
    fun toggleAddFriendsButton(value: Boolean) { _clickOnAddFriendsButton.value = value }
    fun toggleAddQuestionButton(value: Boolean) { _clickOnAddQuestionButton.value = value }
    fun toggleGameSettingsButton(value: Boolean) { _clickOnGameSettingsButton.value = value }
    // ######################

    /* ########################################################################################## */

}